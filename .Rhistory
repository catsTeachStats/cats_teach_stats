#print(p)
fit.tdcA <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + (Native) + cluster(id), data = ttable1)
p = plot(survfit(fit.tdcA),
col = c("gray", "black"),
ylab = "Survival probability",
xlab = "Time (hours)",
lwd = 2,
#xaxt = "n"
)
#lab <- seq(0, 168, by = 12)
#axis(1, at = lab, labels = lab)
legend("topright",
c("Lonicera", "Rubus"),
col = c("gray", "black"),
text.font = 3,
lwd = 2,
bty = "n",
cex = 0.8)
#print(p)
fit.tdcA <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + (Native) + cluster(id), data = ttable1)
p = plot(survfit(fit.tdcA),
col = c("gray", "black"),
ylab = "Survival probability",
xlab = "Time (hours)",
lwd = 2
)
#lab <- seq(0, 168, by = 12)
#axis(1, at = lab, labels = lab)
legend("topright",
c("Lonicera", "Rubus"),
col = c("gray", "black"),
text.font = 3,
lwd = 2,
bty = "n",
cex = 0.8)
#print(p)
fit.tdcB <- coxph(Surv(tstart, tstop, endpt) ~ (Species) + strata(Native) + cluster(id), data = ttable1)
p = plot(survfit(fit.tdcB),
ylab = "Survival probability",
lty = c(1,3),
xlab = "Time (hours)",
lwd = 2
)
legend("topright",
c("Invaded", "Native"),
lwd = 2,
lty = c(1,3),
bty = "n",
cex = 0.8)
#print(p)
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit, conf.int = TRUE)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, pval = TRUE)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, pval = TRUE)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, pval = <0.0001)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, pval = 0.0001)
?brewerpal
??brewerpal
library(RColorBrewer)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "Dark2"
)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "Dark1"
)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "Dark3"
)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "Set1"
)
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "Set2")
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "Set1")
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "Set3")
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = c("gray", "black"))
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "Paired")
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "BrBG")
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = c("brown", "darkgreen"))
fit = survfit(fit.tdcB, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
#           , palette = c("brown", "darkgreen")
, palette = "grey"
)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "Set1"
, linetype = "strata"
)
fit = survfit(fit.tdcA, data = ttable1)
ggsurvplot(fit
, conf.int = TRUE
, risk.table = TRUE
, surv.median.line = "hv"
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
#           , palette = "Set1"
, palette = "grey"
, linetype = "strata"
)
ggsurvplot(survfit(fit.tdc, data = ttable1)
, conf.int = TRUE
, surv.median.line = TRUE
, risk.table = TRUE)
ggsurvplot(survfit(fit.tdc, data = ttable1)
, conf.int = TRUE
, risk.table = TRUE)
View(ttable1)
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ Native + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, risk.table = TRUE)
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, risk.table = TRUE)
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE)
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "grey")
LMO <- subset(ttable1, Species == "LMO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = LMO)
ggsurvplot(survfit(fit.tdcRO, data = LMO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "grey")
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "grey"
, title = "Rubus occidentalis")
nat <- subset(ttable1, Native == "Y")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = nat)
ggsurvplot(survfit(fit.tdcRO, data = nat)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "grey"
, title = "Native Canopy")
nat <- subset(ttable1, Native == "Y")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + cluster(id), data = nat)
ggsurvplot(survfit(fit.tdcRO, data = nat)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "grey"
, title = "Native Canopy")
inv <- subset(ttable1, Native == "N")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + cluster(id), data = inv)
ggsurvplot(survfit(fit.tdcRO, data = inv)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, palette = "grey"
, title = "Invader Canopy")
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "grey"
, title = "Rubus occidentalis"
, font.title = c(10, "italic", "black"))
RO <- subset(ttable1, Species == "RO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = RO)
ggsurvplot(survfit(fit.tdcRO, data = RO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "grey"
, title = "Rubus occidentalis"
, font.title = c(14, "italic", "black"))
LMO <- subset(ttable1, Species == "LMO")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Native) + cluster(id), data = LMO)
ggsurvplot(survfit(fit.tdcRO, data = LMO)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Canopy"
, legend.labs = c("Invasive", "Native")
, palette = "grey"
, title = "Lonicera morrowii"
, font.title = c(14, "italic", "black")
)
nat <- subset(ttable1, Native == "Y")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + cluster(id), data = nat)
ggsurvplot(survfit(fit.tdcRO, data = nat)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = "Species"
, legend.labs = c("Lonicera", "Rubus")
, font.legend = c(10, "italic", "black")
, palette = "grey"
, title = "Native Canopy")
nat <- subset(ttable1, Native == "Y")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + cluster(id), data = nat)
ggsurvplot(survfit(fit.tdcRO, data = nat)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = ""
, legend.labs = c("Lonicera", "Rubus")
, font.legend = c(10, "italic", "black")
, palette = "grey"
, title = "Native Canopy")
inv <- subset(ttable1, Native == "N")
fit.tdcRO <- coxph(Surv(tstart, tstop, endpt) ~ strata(Species) + cluster(id), data = inv)
ggsurvplot(survfit(fit.tdcRO, data = inv)
, conf.int = TRUE
, surv.median.line = "hv"
, risk.table = TRUE
, legend.title = ""
, legend.labs = c("Lonicera", "Rubus")
, font.legend = c(10, "italic", "black")
, palette = "grey"
, title = "Invader Canopy")
fit.tdc <- coxph(Surv(tstart, tstop, endpt) ~ Species * Native + cluster(id), data = ttable1)
fit.tdc
shiny::runApp('Documents/ShinyApps/PSCR1')
runApp('Documents/ShinyApps/PSCR1')
shiny::runApp('Documents/ShinyApps/PSCR1')
runApp('Documents/ShinyApps/PSCR1')
runApp('Documents/ShinyApps/PSCR1')
runApp('Documents/ShinyApps/PSCR1')
runApp('Documents/ShinyApps/PSCR1')
tableO = tapply(data$O2_rate, data$light_treatment, mean)
sdO = tapply(data$O2_rate, data$light_treatment, sd)
nO = tapply(data$O2_rate, data$light_treatment, length)
seO = sd/sqrt(nO)
em = gs_title("Photosynthesis and Cellular Respiration 1 Class Results")
sheet = gs_read(ss = em, ws = "Sheet1") # Get the first sheet
data = as.data.frame(sheet) # Make data frame
tableO = tapply(data$O2_rate, data$light_treatment, mean)
sdO = tapply(data$O2_rate, data$light_treatment, sd)
nO = tapply(data$O2_rate, data$light_treatment, length)
seO = sd/sqrt(nO)
tableO = tapply(data$O2_rate, data$light_treatment, mean)
sdO = tapply(data$O2_rate, data$light_treatment, sd)
nO = tapply(data$O2_rate, data$light_treatment, length)
nO
sdO
sd = tapply(data$CO2_rate, data$light_treatment, sd)
sd
runApp('Documents/ShinyApps/PSCR1')
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=0.95, .drop=TRUE) {
# New version of length which can handle NA's: if na.rm==T, don't count them
length2O <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datacO <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2O(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
datacO <- rename(datacO, c("mean" = measurevar))
datacO$se <- datacO$sd / sqrt(datacO$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMultO <- qt(conf.interval/2 + .5, datacO$N-1)
datacO$ci <- datacO$se * ciMult
return(datacO)
}
sO = summarySE(data, measurevar = "O2_rate", groupvars = "light_treatment")
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=0.95, .drop=TRUE) {
# New version of length which can handle NA's: if na.rm==T, don't count them
length2O <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datacO <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2O(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datacO <- rename(datacO, c("mean" = measurevar))
datacO$se <- datacO$sd / sqrt(datacO$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMultO <- qt(conf.interval/2 + .5, datacO$N-1)
datacO$ci <- datacO$se * ciMultO
return(datacO)
}
sO = summarySE(data, measurevar = "O2_rate", groupvars = "light_treatment")
barO = barplot(tableO, col = c("deepskyblue", "black", "seagreen", "firebrick"),
ylab = "Rate of O2 production (%/sec)", xlab = "Light Treatment")
arrows(barO, tableO + sO$ci, barO, tableO - sO$ci, length = 0) # 95% confidence interval
par("mar")
par(mar=c(1,1,1,1))
barO = barplot(tableO, col = c("deepskyblue", "black", "seagreen", "firebrick"),
ylab = "Rate of O2 production (%/sec)", xlab = "Light Treatment")
arrows(barO, tableO + sO$ci, barO, tableO - sO$ci, length = 0) # 95% confidence interval
runApp('Documents/ShinyApps/PSCR1')
runApp('Documents/ShinyApps/PSCR1')
v<-1
vark <- c(1, 0, 0, 6, 4)
vlab <- c("visual", "auditory", "reading", "kinesthetic", "multi")
bio <- c(0, 2, 5, 3, 0)
blab <- c("def AM", "mod AM", "neither", "mod PM", "def PM")
par(mfrow = c(1,2))
barplot(vlab, names.arg = vlab, ylab = "Count")
barplot(vark, names.arg = vlab, ylab = "Count")
barplot(bio, names.arg = vbio, ylab = "Count")
barplot(bio, names.arg = blab, ylab = "Count")
barplot(bio, names.arg = vbio, ylab = "Count", col = rainbow(5))
barplot(bio, names.arg = blab, ylab = "Count", col = rainbow(5))
barplot(vark, names.arg = vlab, ylab = "Count", col = rainbow(5))
barplot(bio, names.arg = blab, ylab = "Count", col = rainbow(5, start = 2))
barplot(vark, names.arg = vlab, ylab = "Count", col = rainbow(5))
barplot(bio, names.arg = blab, ylab = "Count", col = c("seagreen", "chocolate2", "goldenrod", "firebrick", "teal"))
barplot(bio, names.arg = blab, ylab = "Count", col = c("seagreen", "chocolate2", "goldenrod", "firebrick", "aquamarine"))
barplot(vark, names.arg = vlab, ylab = "Count", col = rainbow(5))
install.packages("vegan")
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
library(vegan)
data(BCI)
S <- specnumber(BCI) # observed number of species
(raremax <- min(rowSums(BCI)))
Srare <- rarefy(BCI, raremax)
plot(S, Srare, xlab = "Observed No. of Species", ylab = "Rarefied No. of Species")
abline(0, 1)
rarecurve(BCI, step = 20, sample = raremax, col = "blue", cex = 0.6)
plot(year, fish)
year <- c(2010, 2011, 2012, 2013, 2014, 2015, 2016)
fish <- c(1, 11, 30, 89, 32, 112, 116)
plot(year, fish)
year <- c(2010, 2011, 2012, 2013, 2014, 2015)
fish <- c(0, 2, 105, 265, 363, 720)
plot(year, fish)
year <- c(2010, 2011, 2012, 2013, 2014, 2015)
fish <- c(0, 2, 105, 265, 363, 720)
plot(year, fish, ylab = "Count", xlab = "Year", main = "Flower Garden Banks National \n Marine Sanctuary")
year <- c(2010, 2011, 2012, 2013, 2014, 2015)
fish <- c(0, 2, 105, 265, 363, 720)
plot(year, fish, ylab = "Lionfish Count", xlab = "Year", main = "Flower Garden Banks National \n Marine Sanctuary")
year <- c(2010, 2011, 2012, 2013, 2014, 2015)
fish <- c(0, 2, 105, 265, 363, 720)
plot(year, fish, ylab = "Lionfish Count", xlab = "Year", pch = 19, cex = 1.2, main = "Flower Garden Banks National \n Marine Sanctuary")
setwd("~/Desktop/cats_teach_stats")
library(swirlify)
pack_course()
set_lesson()
pack_course()
library(swirl)
rm(list=ls())
swirl()
nxt()
